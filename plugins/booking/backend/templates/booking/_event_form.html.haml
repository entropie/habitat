#add-date-template.top-seperator{style: "display: none"}
  = render template: "booking/_dates_add_template", locals: { begin_date: _raw(event.html_date(:start_date)), end_date: _raw(event.html_date(:end_date)) }


%form#events-edit{action: event.exist? ? Backend.routes.eventEdit_path(event.slug) : Backend.routes.eventCreate_path, method: :POST}
  .container

    .columns.top-seperator
      .column.col-2
      .column.col-8
        .form-group
          .input-group
            %span.input-group-addon Title
            %input.form-input{:value => event.title, :name => :title}
      .column.col-2


    .columns.top-seperator
      .column.col-1
      .column.col-5
        .form-group
          .input-group
            %span.input-group-addon Ident
            %input.form-input{:value => event.ident, :name => :ident}
      .column.col-5
        .form-group
          .input-group
            %span.input-group-addon Typ
            %select.form-input{name: :type}
              - Booking::Events::EventTypes.types.each do |et|
                %option{value: et.type, selected: et.type == event.type}= et.type 
      .column.col-2



    .columns.top-seperator
      .column.col-1
      .column.col-5
        .form-group
          .input-group
            %span.input-group-addon Erster Tag
            %input.form-input.datepicker{:name => "dates[begin][]", :value => event.html_date(:start_date)}

      .column.col-5
        .form-group
          .input-group
            %span.input-group-addon Ende Erster Tag
            %input.form-input.datepicker{:value => event.html_date(:end_date), :name => "dates[end][]"}
      .column.col-1
        - if event.recurrent?
          %a#add-date-template-link add


    - if event.recurrent?
      - if not event.dates or event.dates.empty?
        .columns.date-line{style: "display:none"}
      - else
        - event.dates[1..-1].each do |daterange|
          = render template: "booking/_dates_add_template", locals: {begin_date: _raw(daterange.begin_date_p), end_date: _raw(daterange.end_date_p)}




    .columns.top-seperator
      .column.col-2
      .column.col-4
        .form-group
          .input-group
            %span.input-group-addon Teilnehmeranzahl
            %input.form-input{:value => event.attender_slots, :name => :attender_slots}

      .column.col-4
        .form-group
          .input-group
            %span.input-group-addon Protagonisten
            %input.form-input{:value => (event.protagonists.join(",") rescue ""), :name => "protagonists[]"}


      .column.col-12.text-center.top-seperator
        %input.btn.btn-primary{:type => :submit, :value => "Absenden"}    

      .column.col-12.top-seperator
        .form-group
          %textarea#snippet-form.form-input.cm-form{:rows => 15, :name => :content, "data-codemirror-mode" => "text/x-haml"}= event.content
